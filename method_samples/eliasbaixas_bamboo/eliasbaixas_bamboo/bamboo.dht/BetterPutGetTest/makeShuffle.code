protected LinkedList<Integer> makeShuffle(){
  LinkedList<Integer> shuffled=new LinkedList<Integer>();
  LinkedList<Integer> unshuffled=new LinkedList<Integer>();
  for (int i=0; i < getTypes.length; ++i)   unshuffled.addLast(new Integer(getTypes[i]));
  while (!unshuffled.isEmpty()) {
    int which=rand.nextInt(unshuffled.size());
    Iterator<Integer> i=unshuffled.iterator();
    while (true) {
      Integer maxvals=i.next();
      if (which-- == 0) {
        shuffled.addLast(maxvals);
        i.remove();
        break;
      }
    }
  }
  return shuffled;
}
