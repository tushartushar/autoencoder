public void handleEvent(QueueElementIF item){
  if (item instanceof GetByTimeResp) {
    GetByTimeResp resp=(GetByTimeResp)item;
    if (resp.keys != null) {
      for (      OldStorageManager.Key k : resp.keys) {
        ++getsOutstanding;
        dispatch(new GetByKeyReq(k,my_sink,null));
      }
    }
    getContinuation=resp.continuation;
  }
 else   if (item instanceof GetByKeyResp) {
    GetByKeyResp resp=(GetByKeyResp)item;
    --getsOutstanding;
    ++putsOutstanding;
    StorageManager.Key newKey=new StorageManager.Key(resp.key.time_usec,resp.key.ttl_sec,resp.key.guid,ZERO_HASH,resp.key.data_hash,resp.key.put,resp.key.client_id);
    dispatch(new PutReq(newKey,resp.data,my_sink,null));
  }
 else {
    PutResp resp=(PutResp)item;
    if (resp.inval_put_key != null)     logger.warn("inval_put_key=" + resp.inval_put_key);
    if (resp.inval_rm_key != null)     logger.warn("inval_rm_key=" + resp.inval_rm_key);
    --putsOutstanding;
    ++converted;
    if (converted % 1000 == 0) {
      logger.info(converted + " records converted");
    }
  }
  if (getContinuation != null && getsOutstanding < 1000 && putsOutstanding < 1000) {
    dispatch(new GetByTimeCont(getContinuation,my_sink,null));
  }
  if (getsOutstanding == 0 && putsOutstanding == 0 && getContinuation == null) {
    logger.info("databases transferred successfully");
    System.exit(0);
  }
}
