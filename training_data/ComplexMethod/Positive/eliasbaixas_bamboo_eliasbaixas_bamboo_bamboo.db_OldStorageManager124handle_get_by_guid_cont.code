protected void handle_get_by_guid_cont(GetByGuidCont req){
  GBGCont cont=(GBGCont)req.continuation;
  if (!cont.primary) {
    DbTxn xact=null;
    try {
      xact=env.txnBegin(null,Db.DB_TXN_NOSYNC);
    }
 catch (    DbException e) {
      BUG(e);
    }
    Dbc cursor=open_cursor(recycling,xact,"handle_get_by_guid_req");
    Dbt data=new Dbt();
    data.setFlags(Db.DB_DBT_PARTIAL);
    data.setPartialLength(0);
    byte[] last_key=new byte[cont.key.getSize()];
    System.arraycopy(cont.key.getData(),cont.key.getOffset(),last_key,0,cont.key.getSize());
    int r=0;
    try {
      r=cursor.get(cont.key,data,Db.DB_SET_RANGE);
    }
 catch (    DbException e) {
      BUG(e);
    }
    if (r == 0) {
      int cmp=arraycmp(cont.key.getData(),cont.key.getOffset(),last_key,0,cont.key.getSize());
      assert cmp >= 0;
      if (cmp == 0) {
        if (req.del) {
          try {
            cursor.delete(0);
          }
 catch (          DbException e) {
            BUG(e);
          }
        }
        data=new Dbt();
        try {
          r=cursor.get(cont.key,data,Db.DB_NEXT);
        }
 catch (        DbException e) {
          BUG(e);
        }
      }
 else {
        data=new Dbt();
        try {
          r=cursor.get(cont.key,data,Db.DB_CURRENT);
        }
 catch (        DbException e) {
          BUG(e);
        }
      }
    }
    if (req.comp_q != null) {
      while (!finish_get_by_guid_recycling(cont,xact,cursor,data,r,req.comp_q,req.user_data)) {
        try {
          r=cursor.get(cont.key,data,Db.DB_NEXT);
        }
 catch (        DbException e) {
          BUG(e);
        }
      }
    }
    close_cursor(cursor);
    try {
      xact.commit(Db.DB_TXN_NOSYNC);
    }
 catch (    DbException e) {
      BUG(e);
    }
  }
 else   if (req.comp_q != null) {
    DbTxn xact=null;
    try {
      xact=env.txnBegin(null,Db.DB_TXN_NOSYNC);
    }
 catch (    DbException e) {
      BUG(e);
    }
    Dbc sc=open_cursor(by_guid,xact,"handle_get_by_guid_req");
    Dbt pkey=new Dbt();
    Dbt data=new Dbt();
    data.setFlags(Db.DB_DBT_PARTIAL);
    data.setPartialLength(0);
    byte[] last_key=new byte[cont.key.getSize()];
    System.arraycopy(cont.key.getData(),cont.key.getOffset(),last_key,0,cont.key.getSize());
    int r=0;
    try {
      r=sc.get(cont.key,pkey,data,Db.DB_SET_RANGE);
    }
 catch (    DbException e) {
      BUG(e);
    }
    if (r == 0) {
      int cmp=arraycmp(cont.key.getData(),cont.key.getOffset(),last_key,0,cont.key.getSize());
      assert cmp >= 0;
      if (cmp == 0) {
        data=new Dbt();
        try {
          r=sc.get(cont.key,pkey,data,Db.DB_NEXT);
        }
 catch (        DbException e) {
          BUG(e);
        }
      }
 else {
        data=new Dbt();
        try {
          r=sc.get(cont.key,pkey,data,Db.DB_CURRENT);
        }
 catch (        DbException e) {
          BUG(e);
        }
      }
    }
    while (!finish_get_by_guid(cont,xact,sc,pkey,data,r,req.comp_q,req.user_data)) {
      try {
        r=sc.get(cont.key,pkey,data,Db.DB_NEXT);
      }
 catch (      DbException e) {
        BUG(e);
      }
    }
    close_cursor(sc);
    try {
      xact.commit(Db.DB_TXN_NOSYNC);
    }
 catch (    DbException e) {
      BUG(e);
    }
  }
}
