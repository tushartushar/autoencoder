protected boolean finish_get_by_guid(GBGCont cont,DbTxn xact,Dbc cursor,Dbt pkey,Dbt data,int retval,SinkIF comp_q,Object user_data){
  if (retval == Db.DB_NOTFOUND) {
    if (logger.isDebugEnabled())     logger.debug("DB_NOTFOUND");
    GetByGuidResp resp=new GetByGuidResp(null,null,null,user_data);
    application_enqueue(comp_q,resp);
    return true;
  }
  Key k=new Key(ByteBuffer.wrap(pkey.getData(),pkey.getOffset(),pkey.getSize()));
  if (key_expired(k)) {
    if (logger.isDebugEnabled())     logger.debug("dropping in do_get_by_guid k=" + k);
    drop_expired_data(xact,cursor,k,data.getSize());
    return false;
  }
  if ((cont.placemark != null) && (k.compareTo(cont.placemark) == 0)) {
    if (logger.isDebugEnabled())     logger.debug("first key equal to placemark.  Skipping it.");
    return false;
  }
  if (!k.guid.equals(cont.guid)) {
    if (logger.isDebugEnabled())     logger.debug("wanted guid=" + GuidTools.guid_to_string(cont.guid) + " but got guid="+ GuidTools.guid_to_string(k.guid));
    GetByGuidResp resp=new GetByGuidResp(null,null,null,user_data);
    application_enqueue(comp_q,resp);
  }
 else {
    ByteBuffer bb=ByteBuffer.wrap(data.getData(),data.getOffset(),data.getSize());
    GetByGuidResp resp=new GetByGuidResp(k,bb,cont,user_data);
    application_enqueue(comp_q,resp);
  }
  return true;
}
