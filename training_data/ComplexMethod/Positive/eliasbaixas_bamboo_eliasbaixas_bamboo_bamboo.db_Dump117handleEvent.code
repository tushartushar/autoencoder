public void handleEvent(QueueElementIF item){
  if (item instanceof GetByTimeResp) {
    GetByTimeResp resp=(GetByTimeResp)item;
    if (resp.keys != null) {
      for (      OldStorageManager.Key k : resp.keys) {
        ++getsOutstanding;
        dispatch(new GetByKeyReq(k,my_sink,null));
      }
    }
    getContinuation=resp.continuation;
  }
 else   if (item instanceof GetByKeyResp) {
    GetByKeyResp resp=(GetByKeyResp)item;
    --getsOutstanding;
    if (resp.data != null) {
      byte[] kbytes=new byte[OldStorageManager.Key.SIZE];
      resp.key.to_byte_buffer(ByteBuffer.wrap(kbytes));
      try {
        os.write(kbytes,0,kbytes.length);
        byte[] len=new byte[4];
        ByteBuffer.wrap(len).putInt(resp.data.limit() - resp.data.position());
        os.write(len,0,len.length);
        os.write(resp.data.array(),resp.data.arrayOffset() + resp.data.position(),resp.data.limit() - resp.data.position());
      }
 catch (      IOException e) {
        logger.fatal("caught " + e);
        System.exit(1);
      }
      ++dumped;
      if (dumped % 1000 == 0) {
        logger.info(dumped + " records dumped");
      }
    }
  }
  if (getContinuation != null && getsOutstanding < 100) {
    dispatch(new GetByTimeCont(getContinuation,my_sink,null));
  }
  if (getsOutstanding == 0 && getContinuation == null) {
    try {
      os.close();
    }
 catch (    IOException e) {
      logger.fatal("caught " + e);
      System.exit(1);
    }
    logger.info("databases dumped successfully");
    System.exit(0);
  }
}
