public static Client create(Configuration configuration){
  String clientType=configuration.getString("elasticsearch.client",ClientType.NODE);
  String clusterName=configuration.getString("elasticsearch.cluster.name","elasticsearch");
  if (clientType.equals(ClientType.TRANSPORT_CLIENT)) {
    String concatenatedAddresses=configuration.getString("elasticsearch.cluster.address","127.0.0.1:9300");
    String[] addresses=concatenatedAddresses.split(",");
    InetSocketTransportAddress[] inetSocketTransportAddresses=new InetSocketTransportAddress[addresses.length];
    for (int i=0; i < addresses.length; i++) {
      String address=addresses[i];
      String[] split=address.split(":");
      if (split.length != 2)       throw new IllegalArgumentException("Address invalid:" + address + ". Should contain ip and port, e.g. 127.0.0.1:9300");
      inetSocketTransportAddresses[i]=new InetSocketTransportAddress(split[0],Integer.parseInt(split[1]));
    }
    return createTransportClient(clusterName,inetSocketTransportAddresses);
  }
 else {
    String port=configuration.getString("elasticsearch.cluster.port","9300");
    return createNode(clusterName,clientType.equals(ClientType.NODE_CLIENT),Integer.parseInt(port)).client();
  }
}
