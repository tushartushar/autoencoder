public void init_nodes(SandstormConfig config,StageManager mgr){
  LinkedList handlers=new LinkedList();
  Enumeration iter=config.getStages();
  while (iter.hasMoreElements()) {
    stageDescr descr=(stageDescr)iter.nextElement();
    if (descr.stageName.indexOf("Network") != -1)     continue;
    ConfigData config_data=new ConfigData(mgr,descr.initargs);
    Class c=null;
    try {
      c=Class.forName(descr.className);
    }
 catch (    ClassNotFoundException e) {
      logger.fatal("Error: could not load class " + descr.className + ".");
      System.exit(1);
    }
    EventHandlerIF handler=null;
    try {
      handler=(EventHandlerIF)c.newInstance();
    }
 catch (    Exception e) {
      logger.fatal("Error: caught exception " + e + " while trying to instantiate "+ "an object of type "+ descr.className+ ".",e);
      System.exit(1);
    }
    SinkIF sink=new DustDevilSink(handler,Thread.currentThread());
    StageIF stage=new SimulatorStage(descr.stageName,new StageWrapper(handler),sink);
    config_data.setStage(stage);
    mgr.addStage(descr.stageName,stage);
    Object[] p={handler,config_data};
    handlers.addLast(p);
  }
  while (!handlers.isEmpty()) {
    Object[] p=(Object[])handlers.removeFirst();
    EventHandlerIF handler=(EventHandlerIF)p[0];
    ConfigData config_data=(ConfigData)p[1];
    try {
      handler.init(config_data);
    }
 catch (    Exception e) {
      logger.fatal("Error: caught an exception " + e + " while trying to initialize the stage "+ handler+ ".",e);
      System.exit(1);
    }
  }
}
