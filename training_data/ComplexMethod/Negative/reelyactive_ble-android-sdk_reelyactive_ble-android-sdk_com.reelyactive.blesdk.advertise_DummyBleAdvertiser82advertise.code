private void advertise(){
  List<ScanResult> results;
synchronized (this) {
    if (closestBeacon != null) {
      results=new ArrayList<>(closestBeacon);
    }
 else {
      return;
    }
  }
  if (url == null || results.size() == 0) {
    return;
  }
  Collections.sort(results,new Comparator<ScanResult>(){
    @Override public int compare(    ScanResult lhs,    ScanResult rhs){
      return rhs.getRssi() - lhs.getRssi();
    }
  }
);
  URL url;
  OutputStream os=null;
  BufferedReader is=null;
  try {
    url=new URL(this.url);
    URLConnection conn=url.openConnection();
    conn.setDoInput(true);
    conn.setDoOutput(true);
    conn.setRequestProperty("Content-Type","application/json");
    JSONObject jsonObject=getJsonBase();
    BluetoothInterface.MacAddress macAddress=BluetoothInterface.getMacAddress(context);
    jsonObject.getJSONObject("tiraid").getJSONObject("identifier").put("value",macAddress.address.replace(":","").toLowerCase(Locale.US));
    jsonObject.getJSONObject("tiraid").getJSONObject("identifier").getJSONObject("advHeader").put("txAdd",macAddress.type);
    jsonObject.getJSONObject("tiraid").getJSONObject("identifier").getJSONObject("advData").put("complete128BitUUIDs",uuid.replaceAll("[\\W.]","").toLowerCase(Locale.US));
    JSONArray decodings=jsonObject.getJSONObject("tiraid").getJSONArray("radioDecodings");
    for (    ScanResult result : results) {
      JSONObject decoding=getRadioDecodingBase();
      decoding.getJSONObject("identifier").put("value",ScanResultParser.getSystemId(result));
      decoding.put("rssi",127 + result.getRssi());
      decodings.put(decoding);
    }
    SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",Locale.ENGLISH);
    df.setTimeZone(TimeZone.getTimeZone("Z"));
    jsonObject.getJSONObject("tiraid").put("timestamp",df.format(new Date(System.currentTimeMillis())));
    String content=jsonObject.toString(4);
    conn.setRequestProperty("Content-Length",String.valueOf(content.getBytes().length));
    os=conn.getOutputStream();
    os.write(content.getBytes());
    is=new BufferedReader(new InputStreamReader(conn.getInputStream()));
    while (null != is.readLine()) {
    }
    is.close();
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
catch (  JSONException e) {
    e.printStackTrace();
  }
 finally {
    if (os != null) {
      try {
        os.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
}
